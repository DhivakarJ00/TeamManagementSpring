pipeline{
  agent any  
    tools{
      maven 'maven'
      jdk 'JDK11'
    }

  stages {
    stage('Build'){
       steps {
                sh'mvn clean package'
                    
                
            }
     }
    stage('Test'){
      steps{
        sh 'mvn test'
      }
      }
    
  
    stage('collect artifact'){
     steps{
     archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
     }
     }
     stage('deploy to artifactory')
     {
     steps{
     
     rtUpload (
    serverId: 'jfrog_server1',
    spec: '''{
          "files": [
            {
              "pattern": "target/*.jar",
              "target": "passport_TM_Maven"
            }
         ]
    }''',
 
    buildName: 'holyFrog',
    buildNumber: '42'
)
     }}
     stage('download from artifactory')
         {
            steps{
     
                rtDownload (
                    serverId: 'jfrog_server1',
                    spec: '''{
                    "files": [
                         {
                             "pattern": "passport_TM_Maven",
                             "target": ""
                        }
                     ]
                }''',
 
)
     }}
     
    
  }
  post {  
         always {  
             echo 'This will always run'  
         }  
         success {   
            echo "========Deploying executed successfully========"
            emailext attachLog: true, body: "<b>Example</b><br>Project: ${env.JOB_NAME}", from: 'nameisdhiva007@gmail.com', mimeType: 'text/html', replyTo: '', subject: "Deploy Success CI: Project name -> ${env.JOB_NAME}", to: "nameisdhiva007@gmail.com";
         }  
         failure {  
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'nameisdhiva007@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "nameisdhiva007@gmail.com";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline has changed'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }
 
  }

